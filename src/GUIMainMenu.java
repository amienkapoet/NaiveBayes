
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
//import  main.defineDataTrain;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author vica
 */
public class GUIMainMenu extends javax.swing.JFrame {

    /**
     * Creates new form GUIMainMenu
     */
    TreeMap<String, String> predict_data = new TreeMap<>();
    String temp = new String();
    main main = new main();

    public GUIMainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BrowseButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        filePath = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        boxResult = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fileStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BrowseButton.setText("Browse");
        BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        filePath.setText("D:\\FADEL SKRIPSI FINAL\\Validasi V3\\NaiveBayes-master\\TestingInput\\TestingInput.csv");
        filePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathActionPerformed(evt);
            }
        });

        boxResult.setColumns(20);
        boxResult.setRows(5);
        jScrollPane1.setViewportView(boxResult);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("PREDIKSI LAMA PERKULIAHAN");

        jLabel2.setText("File Nilai Mahasiswa");

        fileStatus.setText("Idle");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(filePath, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(fileStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fileStatus)
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseButtonActionPerformed
        JFileChooser fc = new JFileChooser();

        fc.showOpenDialog(null);
        File selectedFile = fc.getSelectedFile();
        if (selectedFile != null) {
            this.temp = selectedFile.getAbsolutePath();
            this.filePath.setText(temp);
            fileStatus.setText("File nilai berhasil di import");
        } else {
            fileStatus.setText("File nilai gagal di import");
        }
    }//GEN-LAST:event_BrowseButtonActionPerformed

    private void filePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        Scanner sc = new Scanner(System.in);
//        System.out.println("(1) Pengujian \n(2) Prediksi \nPilih Mode : ");
        int mode = 2;
        int n_partition = 1;
//        if (mode == 1) {
//            System.out.println("Masukkan jumlah partisi : ");
//            n_partition = sc.nextInt();
//        }
        String folder_path = "src\\AllData\\";
//        String folder_path = "src\\DataTesting\\";
        File folder = new File(folder_path);
        File[] listOfFiles = folder.listFiles();
        readCSV data = new readCSV(mode, n_partition);
        NaiveBayes nb = new NaiveBayes(data.data_mahasiswa, data.jumlahMahasiswa);
        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                String filename = folder_path + listOfFiles[i].getName();
                String[] filenames = filename.split(".csv")[0].split(" ");
                double tahun = Double.parseDouble(filenames[2]) - Double.parseDouble(filenames[0].split("20")[1]);
                String semester = filenames[1];
                if (semester.equalsIgnoreCase("ganjil")) {
                    tahun += 0.5;
                } else {
                    tahun += 1;
                }
                try {
                    data.read(filename, tahun, filename);
                } catch (IOException ex) {
                    Logger.getLogger(GUIMainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        System.out.println("JUMLAH MAHASISWA : " + data.jumlahMahasiswa);

        String[] filter = new String[]{"Algoritma & Struktur Data", "Sistem Dijital", "Desain & Analisis Algoritma", "Manajemen Informasi & Basis Data", "Sistem Operasi"};

        try {
            //        if (mode == 1) {
//            int n = 1;
//            List<TreeMap<String, List<mahasiswa>>> partition = data.partition;
//            for (int i = 0; i < n_partition; i++) {
//                List<mahasiswa> data_test = new ArrayList<>();
//                TreeMap<String, List<mahasiswa>> data_train = defineDataTrain();
//
//                System.out.println("PARTITION " + (i + 1));
//                int n_data_test = 0;
//                int n_data_train = 0;
//                for (int j = 0; j < n_partition; j++) {
//                    TreeMap<String, List<mahasiswa>> curr_partition = partition.get(j);
//
//                    if (i == j) {
//                        for (Map.Entry<String, List<mahasiswa>> entry : curr_partition.entrySet()) {
//                            data_test.addAll(entry.getValue());
//                        }
//                    } else {
//                        curr_partition.entrySet().forEach((entry) -> {
//                            String key = entry.getKey();
//                            List<mahasiswa> vals = entry.getValue();
//                            List<mahasiswa> recent = data_train.get(key);
//                            recent.addAll(vals);
//                            data_train.replace(key, recent);
//                        });
//                    }
//
//                }
//
//                for (Map.Entry<String, List<mahasiswa>> entry : data_train.entrySet()) {
//                    String key = entry.getKey();
//                    List<mahasiswa> value = entry.getValue();
//                    n_data_train += value.size();
//                }
//                System.out.println("Total test = " + data_test.size());
//                System.out.println("Total train = " + n_data_train);
//                for (Iterator<mahasiswa> iterator = data_test.iterator(); iterator.hasNext();) {
//                    mahasiswa m = iterator.next();
//                    System.out.println("Mahasiswa ke-" + n);
//                    System.out.println("info = " + m.info);
//                    TreeMap<String, String> nilai = filterNilai(m.nilai, filter);
//                    NaiveBayes nb = new NaiveBayes(data_train, n_data_train);
//                    nb.predict(nilai);
//                    n++;
//                }
//            }
//        } else {
            this.insertMatkul(temp);
        } catch (IOException ex) {
            Logger.getLogger(GUIMainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        nb.predict(predict_data);
        this.boxResult.setText(nb.res);
    }
    
    public void insertMatkul(String path_matkul) throws IOException {
        List<String> dataListMatkul = Files.readAllLines(Paths.get(path_matkul));
        for (String line : dataListMatkul) {
            String matkul[] = line.split(";");

            predict_data.put(matkul[0], matkul[1]);
            
        }

//        }
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIMainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIMainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BrowseButton;
    private javax.swing.JTextArea boxResult;
    private javax.swing.JTextField filePath;
    private javax.swing.JLabel fileStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
